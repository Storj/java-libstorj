import org.apache.tools.ant.filters.*
import org.gradle.internal.os.OperatingSystem

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'cpp'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'io.storj'
version = '0.8.3'

description = """Java bindings for libstorj"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

def javaHome = System.getenv("JAVA_HOME")

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version:'4.12'
}

test {
    systemProperty 'java.library.path','build/libs/jni/shared'
}

processResources {
    filter ReplaceTokens, tokens: [
            "project.version": project.version
    ]
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

model {
    components {
        jni(NativeLibrarySpec) {
            baseName 'storj-java'
            sources {
                cpp {
                    source {
                        srcDir 'src/main/cpp'
                        include "**/*.cpp"
                    }
                }
            }
            binaries.withType(StaticLibraryBinarySpec) {
                buildable = false
            }
        }
    }
    toolChains {
        clang(Clang) {
            eachPlatform {
                cppCompiler.withArguments { args ->
                    args << "-c"
                    args << "-Wall"
                    args << "-fPIC"
                    args << "-v"
                    args << "-I${javaHome}/include"
                }
                linker.withArguments { args ->
                    args << "-fPIC"
                    args << "-shared"
                    args << "-lstorj"
                    args << "-lcurl"
                    args << "-ljson-c"
                    args << "-lnettle"
                    args << "-luv"
                    args << "-v"
                }
                if (OperatingSystem.current().isLinux()) {
                    cppCompiler.withArguments { args ->
                        args << "-I${javaHome}/include/linux"
                    }
                }
                if (OperatingSystem.current().isMacOsX()) {
                    cppCompiler.withArguments { args ->
                        args << "-I${javaHome}/include/darwin"
                    }
                }
            }
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "GNU Lesser General Public License v3.0"
            url "https://www.gnu.org/licenses/lgpl-3.0.txt"
        }
    }
    developers {
        developer {
            id "kaloyan-raev"
            name "Kaloyan Raev"
            email "kaloyan@storj.io"
            organization "Storj"
            organizationUrl "https://storj.io"
        }
    }

    scm {
        connection "scm:git:git://github.com/Storj/java-libstorj.git"
        developerConnection "scm:git:ssh://github.com:Storj/java-libstorj.git"
        url "https://github.com/Storj/java-libstorj"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifactId 'libstorj-java'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Java bindings for libstorj')
                root.appendNode('name', 'java-libstorj')
                root.appendNode('url', 'https://github.com/Storj/java-libstorj')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publications = ['maven']
    publish = true
    pkg {
        repo = 'maven'
        name = 'libstorj-java'
        licenses = ['LGPL-3.0']
        vcsUrl = 'https://github.com/Storj/java-libstorj.git'
    }
}
